{"userexec":true,"lines":["!var usage Usage: !e fuse <card name> and <card name> [and <card name>] OR !e fuse <fused card name>","!if {#} = 0","!throw {usage}","!end","!var andstate 1","!var args fuse_submit","!for i 1 {#}","!if {{i}} = and","!if {!exists id{andstate}} = False","!throw {usage}","!end","!var andstate {!add {andstate} 1}","!if {andstate} > 3","!throw You cannot fuse more than three cards together.","!end","!else {!exists id{andstate}} = False","!var id{andstate} {{i}}","!else","!var id{andstate} {id{andstate}} {{i}}","!end","!var args {args} {{i}}","!end","!var id1 {!e to_id {id1}}","!if {!exists id2} = True","!var id2 {!e to_id {id2}}","!end","!if {!exists id3} = True","!var id3 {!e to_id {id3}}","!if {id1} != {id2} or {id2} != {id3}","!throw It's only possible to fuse three of the same card together.","!else {!isint {!at 3 {id1}}} = False","!throw You cannot fuse cards that are already fused!","!end","!var fusion {!e to_id {id1} {id2} {id3}}","!else {!exists id1} = {!exists id2}","!if {!isint {!at 3 {id1}}} = True and {!isint {!at 3 {id2}}} = True","!var fusion {!e to_id {id1} {id2}}","!else","!throw You cannot fuse cards that are already fused!","!end","!else {!isint {!at 3 {id1}}} = False","!var fusion {id1}","!var id1 {!e to_id {!at 1 {fusion}}{!at 2 {fusion}}}","!var id2 {!e to_id {!at 3 {fusion}}{!at 4 {fusion}}}","!if {!at 6 {fusion}} != NULL","!var id3 {!e to_id {!at 5 {fusion}}{!at 6 {fusion}}}","!if {id1} != {id2} or {id2} != {id3}","!throw It's only possible to fuse three of the same card together.","!end","!end","!else","!throw {usage}","!end","!if {!data card {id1} params category} != {!data card {id2} params category}","!throw You cannot fuse cards of different categories!","!end","!var title {!e to_str {fusion}}","!var ammo {!e ammo {fusion}}","!var range {!e card_range {fusion}}","!var category {!e card_category {fusion}}","!var rarity {!e card_rarity {fusion}}","!var targets {!e targets {fusion}}","!var alt_amt {!e card_alt_amt {fusion}}","!var repetitions {!e card_get_meta_num {fusion} repetitions}","!var extras > _ _","!if {rarity} != Common and {rarity} != Special","!throw You cannot fuse {rarity} cards!","!end","!foreach i card {id1}\n{id2}","!if {id1} != {id2} or {i} = 1 and {!has card {card} ext_txt} = True","!var extras {extras}\n> -# {!data card {card} meta ext_txt}","!end","!if {!has card {card} status} = True and {!exists statusnote} = False","!var statusnote y","!var extras {extras}\n> -# Status effects take effect the round after application.","!end","!end","!if {!e card_both_meta {fusion} silent} = True","!var extras {extras}\n> -# Silent. No public announcement will be shown when played.","!end","!var header **{title}** (Fused {category}, {rarity}, {ammo} Ammo","!if {category} = Attack","!var header {header}, {range} Range)","!else","!var header {header})","!end","!if {category} = Attack","!if {targets} = 1","!var desc Target another player","!else","!var desc Target {targets} players","!end","!var ta_amt {!e card_get_meta_num {fusion} ta_amt}","!if {ta_amt} > 0","!var tadesc Once played, target cannot defend until they are attacked {ta_amt} additional time","!if {ta_amt} > 1","!var tadesc {tadesc}s","!end","!var desc {tadesc}. {desc}","!end","!if {repetitions} > 0","!var desc {desc} and attack them {repetitions} times.","!else","!var desc {desc}.","!end","!var extras {extras}\n> -# Can't target self.","!if {!e card_has_meta {fusion} inverse} = True","!var desc {desc} If they defend,","!else","!var desc {desc} If they don't defend,","!end","!if {repetitions} > 0","!var desc {desc} each attack will","!end","!if {!e card_has_id {fusion} ID40} = True","!var desc {desc} deal up to {!e card_damage {fusion}} damage","!else","!var desc {desc} deal {!e card_damage {fusion}} damage","!end","!else {!e card_is_shield {fusion}} = True","!var desc Choose","!if {!e card_has_id {fusion} ID45} = True","!var desc {desc} any player other than yourself, and","!end","!if {!e card_has_meta {fusion} bidirectional} = True","!var desc {desc} Up or Down. Create a bi-directional {!e card_get_meta_num {fusion} hp} HP shield next to you. Until its HP is depleted, it will block any attack travelling past it. However, it takes damage from attacks immediately","!else","!var desc {desc} Up or Down. Create a {!e card_get_meta_num {fusion} hp} HP shield next to you, facing away from yourself. Until its HP is depleted, it will block any attack travelling in the opposite direction. However, it takes damage from attacks immediately","!end","!if {!e card_get_meta_num {fusion} regen} > 0","!var extras {extras}\n> Can regenerate {!e card_get_meta_num {fusion} regen} HP per turn, up to a maximum of 5.","!end","!foreach _ id_ {id1}\n{id2}","!if {id_} = ID45","!var id_ ID6","!end","!if {!e card_is_shield {id_}} = False","!var extras {extras}\n> Secretly, it will hold a {!e to_str {id_}} for when it gets attacked.","!end","!end","!else {category} = Defense","!var im {!e card_get_meta_num {fusion} im_amt}","!if {im} > 1","!var desc Draw {im} cards. If at least one is a Defense card, block {targets} attack","!else {im} = 1","!var desc Draw 1 card. If it's a Defense card, block {targets} attack","!else","!var desc Block {targets} attack","!end","!if {targets} > 1","!var desc {desc}s","!end","!if {!e card_has_id {fusion} ID45} = True","!var desc {desc} against anybody except yourself","!end","!if {!e card_has_id {fusion} ID48} = True","!if {fusion} = kekeke","!var kevlar_downgrade_card keke","!else {!at 1 {fusion}}{!at 2 {fusion}} = ke","!var kevlar_downgrade_card de{!at 3 {fusion}}{!at 4 {fusion}}","!else","!var kevlar_downgrade_card {!at 1 {fusion}}{!at 2 {fusion}}de","!end","!end","!else","!var target_type {!e card_item_target_type {fusion}}","!if {!e card_has_meta {fusion} self_fuse} = True","!var placement a random","!end","!var userplayer user","!foreach i tt {!split | {target_type}}","!if {i} = 1","!if {tt} = crate","!var predesc Choose Pistol!, Defend!, or Bandage!","!var cratehack gain the chosen card","!else {tt} = player","!var userplayer target","!var predesc Target another player","!else {!ioo {tt} attack defense item} = True","!var predesc {tt}","!var cardselect true","!var placement the","!else {tt} = card","!var cardselect true","!var placement the","!else {tt} = category","!var predesc Choose a card category","!else","!var predesc Target {tt}","!end","!else {i} = 2","!if {tt} = category","!var predesc {predesc} and choose a card category","!else {cardselect} = true","!var placement each","!if {tt} = card","!if {!exists predesc} = True","!var predesc Select an unfused {predesc} card plus any other card in hand, in that order,","!else","!var predesc Select any two unfused cards in hand","!end","!else","!if {predesc} = {tt}","!var predesc Select two other unfused {tt} cards in hand","!else {!exists predesc} = True","!var predesc Select an unfused {predesc} card, and then an unfused {tt} card, in that order,","!else","!var predesc Select any unfused card, and then another {tt} card, in that order,","!end","!end","!end","!else","!if {tt} = card","!var predesc Select any three unfused cards in hand","!else","!var predesc Select three other unfused {tt} cards in hand","!end","!end","!end","!if {!exists cratehack} = False","!var cratehack give {userplayer} a Pistol!, Defend!, or Bandage! at random","!end","!if {!ioo {predesc} attack defense item} = True","!var predesc Select an unfused {predesc} card","!end","!var desc |","!end","!if {!e card_is_shield {fusion}} = False","!if {!has card {id1} player_alt_txt} = True and {userplayer} = target","!var desc {desc} | {!data card {id1} meta player_alt_txt}","!else {!has card {id1} alt_txt} = True","!if {!exists id3} = True","!var alt_amt {!mult {alt_amt} 3}","!var doubled true","!var tripled true","!else {!data card {id1} title} = {!data card {id2} title}","!var alt_amt {!mult {alt_amt} 2}","!var doubled true","!end","!if {tripled} = true and {!has card {id1} triple_alt_txt} = True","!var desc {desc} | {!data card {id1} meta triple_alt_txt}","!else {doubled} = true and {!has card {id1} double_alt_txt} = True","!var desc {desc} | {!data card {id1} meta double_alt_txt}","!else","!var desc {desc} | {!data card {id1} meta alt_txt}","!end","!end","!if {!has card {id2} player_alt_txt} = True and {userplayer} = target","!var desc {desc} | {!data card {id2} meta player_alt_txt}","!else {!has card {id2} alt_txt} = True and {doubled} != true and {!e card_both_meta {fusion} self_fuse} = False","!var desc {desc} | {!data card {id2} meta alt_txt}","!end","!end","!say > {header}\n> [{fusion}]\n> _ _","!if {!exists predesc} = True","!say > {predesc} to {!e commalist {desc}}.","!else","!say > {!e commalist {desc}}.","!end","!if {!arg {extras}} != >____","!say {extras}","!end","!if {!exists id3} = True","!say _ _\nThis is only a preview. If you want to make the card itself, you must use the Triplicate?! card or something it's fused with.","!else","!say _ _\nThis is only a preview. If you want to make the card itself, please use `!e {args}`","!end"]}